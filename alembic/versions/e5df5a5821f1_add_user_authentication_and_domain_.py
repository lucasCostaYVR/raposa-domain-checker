"""Add user authentication and domain management tables

Revision ID: e5df5a5821f1
Revises: 836327f86dca
Create Date: 2025-07-20 20:49:10.379336

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e5df5a5821f1'
down_revision: Union[str, Sequence[str], None] = '836327f86dca'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('subscription_tier', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('user_domains',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('domain', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('auto_check_enabled', sa.Boolean(), nullable=True),
    sa.Column('check_frequency', sa.String(), nullable=True),
    sa.Column('last_auto_check', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_domains_domain'), 'user_domains', ['domain'], unique=False)
    op.create_index(op.f('ix_user_domains_id'), 'user_domains', ['id'], unique=False)
    op.add_column('domain_checks', sa.Column('user_id', sa.String(), nullable=True))
    op.add_column('domain_checks', sa.Column('user_domain_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'domain_checks', 'user_domains', ['user_domain_id'], ['id'])
    op.create_foreign_key(None, 'domain_checks', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'domain_checks', type_='foreignkey')
    op.drop_constraint(None, 'domain_checks', type_='foreignkey')
    op.drop_column('domain_checks', 'user_domain_id')
    op.drop_column('domain_checks', 'user_id')
    op.drop_index(op.f('ix_user_domains_id'), table_name='user_domains')
    op.drop_index(op.f('ix_user_domains_domain'), table_name='user_domains')
    op.drop_table('user_domains')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
